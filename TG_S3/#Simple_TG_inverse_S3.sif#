!---LUA BEGIN
! assert(loadfile('../COLD.lua'))()
! assert(loadfile('../PIG.lua'))()
!---LUA END

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
$name="TG_S3_Simple_Transient"

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Header
  Mesh DB "." "#meshdb#"
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Constants
  water density = Real #rhoo
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation
  Coordinate System  = Cartesian 3D 
  Simulation Type = Steady
 
  Timestep Intervals = 10
  TimeStep Size = 0.00014 !1 hr CAN ADD TIME EVOLUTION
  Output Intervals = 1

  Extruded Mesh Levels = #MLEV
  Extruded Mesh Density = Variable Coordinate 1
    Real MATC "1.0 + 2.5 * tx[0]"

  Steady State Min Iterations = 1
  Steady State Max Iterations = 1

  OutPut File = "$name$_.result"
  Output Intervals = 1

  Restart File = "../TG_S1p5/results/readnc_tempc_transient.result"
  Restart Position = 0

  Restart Before Initial Conditions = logical True
  Initialize Dirichlet Conditions = Logical False

  max output level = 8
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Main ice body
Body 1
  Equation = 1
  Body Force = 1
  Material = 1
  Initial Condition = 1
End

! lower surface
Body 2
  Equation = 2
  Material = 2
End

! upper surface
Body 3
  Material = 3
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1
 
  Temperature = Variable temp_c
    Real lua "K2C(tx[0])"  

  alpha = Equals proj_beta !Real -3.0

  FS lower = Variable proj_thickness, proj_bed
    Real lua "floatLower(tx[0],tx[1])"
  FS upper = Variable proj_thickness, proj_bed
    Real lua "floatUpper(tx[0],tx[1])"

  !dvu_ext = Variable proj_dvu 1, proj_dvu 2
   ! Real lua "math.sqrt(tx[0]*tx[0] + tx[1]*tx[1] )"

End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Body Force 1
  Flow BodyForce 1 = Real 0.0                          
  Flow BodyForce 2 = Real 0.0                          
  Flow BodyForce 3 = Real #gravity
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! ice material properties in MPa - m - a system 
Material 1
  sea level = Real 0.0

  Density = Real #rhoi

  Viscosity Model = String "glen"
  Viscosity = 1.0 ! Dummy but avoid warning output
  Glen Exponent = Real 3.0

  !Glen Enhancement Factor = Variable dvu_ext
   ! Real lua "IfThenElse((tx[0] < 0.3), 1.0,10.0)"
  !Glen Enhancement Factor = Real "Glen Enhancement Factor"

  !Temperature Field Variable = String "Temperature"
  Relative Temperature = Variable Temperature, Pressure
    Real lua "relativetemp(tx[0],tx[1])"

  Limit Temperature = Real #Tlim
  Rate Factor 1 = Real #A1
  Rate Factor 2 = Real #A2
  Activation Energy 1 = Real #Q1
  Activation Energy 2 = Real #Q2
  Glen Enhancement Factor = Real 1.0
  Critical Shear Rate = Real 1.0e-10
End

Material 2
  Density = Real #rhoi
  Min FS lower = Equals proj_bed
  Min Zs Bottom = Equals proj_bed
End

Material 3
  Density = Real #rhoi
  Min FS upper = variable "proj_bed"
    Real lua "tx[0] + MINH"
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 1
  Equation = "DummyRoutine"
  Procedure = File "DummySolver" "DummySolver"
  Exec Solver = "Before all"
  Variable = -nooutput dummyV
  Variable Output = False
  Exported Variable 1 = -dofs 1 "proj_bed
  Exported Variable 2 = -dofs 1 "proj_beta"
  Exported Variable 3 = -dofs 2 "proj_dvu"
  Exported Variable 4 = -dofs 1 "proj_thickness"
  Exported Variable 5 = -dofs 1 "proj_vobs"
  Exported Variable 6 = -dofs 1 "proj_vx"
  Exported Variable 7 = -dofs 1 "proj_vy"
  Exported Variable 8 = -dofs 1 "temp_c"
End

Solver 2
  Exec Solver = Before All
  Equation = "MapCoordinate_init"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"
  Active Coordinate = Integer 3

  Top Surface Variable Name = String "FS upper"
  Bottom Surface Variable Name = String "FS lower"

  Dot Product Tolerance = Real #DPtol
  Displacement Mode = Logical False
  Correct Surface = Logical True
  Minimum Height = Real #MINH
End

Solver 3
  Equation = "HeightDepth"
  Exec Solver = "Before All"
  Procedure = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Active Coordinate = Integer 3
  Operator 1 = depth
  Operator 2 = height
End

Solver 4
  Exec Solver = Before all !Was before simulation
  Equation = "GroundedMask"
  Procedure = "ElmerIceSolvers" "GroundedSolver"
  Variable = GroundedMask
  Variable DOFs = 1
  Toler = Real #GLTolerance
  Bedrock Variable = String "proj_bed"
End

!!!! Navier-Stokes Solution
Solver 5
  Equation = "Navier-Stokes"  
  Stabilization Method = String Stabilized
  Flow Model = Stokes

  Optimize Bandwidth = True

  !mandatory to save bulk stiffness matrix
  Calculate Loads = Logical True

  Linear System Solver = Direct
  Linear System Direct Method =  mumps
  Mumps percentage increase working space = Integer 60

  Nonlinear System Max Iterations = Integer 50
  Nonlinear System Convergence Tolerance  = Real 1.0e-2
  Nonlinear System Newton After Iterations = 50
  Nonlinear System Newton After Tolerance = 1.0e-5
  Nonlinear System Reset Newton = Logical True
  Nonlinear System Relaxation Factor = 0.5

  Steady State Convergence Tolerance = Real 1.0e-10

  ! Timings of the solver
  Linear System Timing = Logical True
  Linear System Timing Cumulative = Logical True
  Solver Timing = Logical True
  Solver Timing Cumulative = Logical True

! square root of the slip coef
  Exported Variable 1 = -dofs 1 "alpha"
  !Exported Variable 1 DOFS = Integer 1
  Exported Variable 2 = -dofs 1 "FS upper"
  Exported Variable 3 = -dofs 1 "FS lower"
  Exported Variable 4 = -dofs 1 "Temperature"
  !Exported Variable 5 = -dofs 1 "dvu_ext"
  !Exported Variable 5 DOFS = Integer 1
  !Exported Variable 6 = -dofs 1 "Glen Enhancement Factor"
  !Exported Variable 6 DOFS = Integer 1
End

Solver 6
!  Exec Solver = String "never"
  Exec Solver = String "after saving"
  Equation = String "ResultOutput"
  Procedure = File "ResultOutputSolve" "ResultOutputSolver"
  Save Geometry Ids = Logical True
  Output File Name = File $name
  Output Format = String "vtu"
  Output Directory = File #outdir
  Vtu Format = Logical True
  Save Geometry Ids = Logical True
  Scalar Field 1  = alpha
  Scalar Field 2  = proj_beta
  Scalar Field 3  = proj_bed
  Scalar Field 4  = height
  Scalar Field 5  = depth
  Scalar Field 6  = FS upper
  Scalar Field 7  = FS lower
  Scalar Field 8 = groundedmask
  !Scalar Field 9 = proj_dvu 1
  !Scalar Field 10 = proj_dvu 2
  !Scalar Field 11 = glen enhancement factor
  Vector Field 1  = velocity 
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Equation 1
  Active Solvers (5) = 1 2 3 5 6
  Flow Solution Name = String "Flow Solution"
  Convection = Computed 
  NS Convect= False
End

Equation 2
  Active Solvers (1) =  4
  Convection = Computed 
  Flow Solution Name = String "Flow Solution"
  Friction Load Mask = String "GroundedMask" 
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Boundary Condition 1
  Name = "inland_boundary"
  Target Boundaries(1)  = 1

  Normal-Tangential Velocity = Logical True
  Slip Coefficient 1 = Real 10.0
  Slip Coefficient 2 = Real 0.001
  Slip Coefficient 3 = Real 0.001
End

Boundary Condition 2
  Name = "calving_front"
  Target Boundaries(1) = 2

 Flow Force BC = logical True
 External Pressure = variable coordinate 3
   Real Procedure "ElmerIceUSF" "SeaPressure"
 
 Normal-Tangential Velocity = True
 Compute Sea Pressure = Logical True
End

Boundary Condition 3
  Name= "bed" !mandatory to compute regularistaion term of the cost function (int (dbeta/dx) 2)
  Body ID = 2
  
  Test Contact Tolerance = real 1.0e-10
  Height = Real 0.0
  Mass Consistent Normals = logical True

  Normal-Tangential Velocity = Logical True  

  Velocity 1 = Real 0.0e0
  Velocity 1 Condition = Variable GroundedMask
    Real MATC "tx + 0.5"

  FS lower = Variable proj_thickness, proj_bed
     Real lua "floatLower(tx[0],tx[1])"

  Slip Coefficient 2 = Variable alpha, GroundedMask
    REAL procedure "ElmerIceUSF" "TenPowerA_masked"
  Slip Coefficient 3 = Variable alpha, GroundedMask
    REAL procedure "ElmerIceUSF" "TenPowerA_masked"
  Slip Coefficient derivative = Variable alpha, GroundedMask
    REAL procedure "ElmerIceUSF" "TenPowerA_d_Masked"

  Flow Force BC = logical True

  External Pressure = Variable Coordinate 3
     Real LUA "IfThenElse((tx[0] > 0), 0.0,-rhoo*gravity*tx[0])"  !CHANGE BACK TO SW_PRESSURE?

!!  External Pressure = variable coordinate 3
!!    Real Procedure "ElmerIceUSF" "SeaPressure"
!!  Compute Sea Pressure = Logical True

!!  External Pressure = Variable Coordinate 3
!!    Real lua "sw_pressure(tx[0])"


!!!ATTENTION TO THIS!!! COMMENT IN OR OUT. 
  Slip Coefficient 1 = Variable Coordinate 3
    Real Procedure "ElmerIceUSF" "SeaSpring"
  Compute Sea Spring = Logical True

End

! Upper Surface
Boundary Condition 4
  Name= "Surface" !mandatory to compute cost function
  Body Id = 3
  Depth = Real 0.0
  FS upper = Variable proj_thickness,proj_bed
     Real lua "floatUpper(tx[0],tx[1])"
End 