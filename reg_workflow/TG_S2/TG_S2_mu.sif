
!---LUA BEGIN
! assert(loadfile('../../COLD.lua'))()
! assert(loadfile('../../PIG.lua'))()
!---LUA END

$name="TG_SR_0617_Run1_pl"

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Header
  Mesh DB "../" "#meshdb#"
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Constants 
  Buoyancy Use Basal Melt = Logical False
  Bottom Surface Name = String bed
  sea level = Real #zsl
  water density = Real #rhoo

  ! parameters for the ismip6 basal melt
  ! (seems to be mostly in SI units)
  gamma 0 = Real -11075.0 ! unit: m/yr
  Ice Density = Real 910.0
  SW Density = Real 1025.0
  Latent Heat = Real #Lf  !3.34e05
  SW Cp = Real 3974.0
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation
  Coordinate System  = Cartesian 3D 
  Simulation Type = Transient
  Timestepping Method = "bdf"
  BDF Order = 1

  Timestep Intervals = 76
  Timestep Size = Variable "Timestep"
    Real lua "timeStepCalc(tx[0])"
  Output Intervals = 1

  Steady State Min Iterations = 1
  Steady State Max Iterations = 1

  Output File = "$name$.result"

  Restart File = "../reg_workflow/TG_S1/results/readnc.result"
  Restart Position = 0
  Restart Time = Real 2015.0

  Restart Before Initial Conditions = logical True
  Initialize Dirichlet Conditions = Logical False

  Extruded Mesh Levels = #MLEV
  Extruded Mesh Density = Variable Coordinate 1
    Real MATC "1.0 + 2.5 * tx"

  max output level = 9
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Main ice body
Body 1
  Equation = 1
  Body Force = 1
  Material = 1
  Initial Condition = 1
End

Body 2
  Equation = 2
  Material = 2
  !Body Force = 2
End

Body 3
  Equation = 3
  Material = 3
  !Body Force = 3
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1
  Temperature = Variable temp_c
    Real lua "K2C(tx[0])"

  FS lower = Variable thickness, bed
    Real lua "floatLower(tx[0],tx[1])"
  FS upper = Variable thickness, bed
    Real lua "floatUpper(tx[0],tx[1])"

  TemperatureRel = Variable Temperature, Pressure
    Real lua "relativetemp(tx[0],tx[1])"

  Mu = Variable TemperatureRel
    Real lua "initMu(tx[0])"

  EF = Real 1.0
  bottom EF = Real 1.0
End

!Initial Condition 2
!  bmb = Real 0.0
!End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Body Force 1
  Flow BodyForce 1 = Real 0.0                          
  Flow BodyForce 2 = Real 0.0                          
  Flow BodyForce 3 = Real #gravity
End

!Body Force 2
!  FS lower Accumulation Flux 1 = Real 0.0e0
!  FS lower Accumulation Flux 2 = Real 0.0e0
!!  FS lower Accumulation Flux 3 = Real 0.0e0
!  FS lower Accumulation Flux 3 = Variable bmb
!    Real MATC "0.0 - tx"
!End

!Body Force 3
!  FS upper Accumulation Flux 1 = Real 0.0e0
!  FS upper Accumulation Flux 2 = Real 0.0e0
!  FS upper Accumulation Flux 3 = Equals smbref
!End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! ice material properties in MPa - m - a system 
Material 1
  sea level = Real #zsl

  Density = Real #rhoi

  Viscosity Model = String "power law"
  Viscosity Exponent = Real #m

! Viscosity defined as mu*EF^2 to ensure >0 and to
! use mu as initial guess (here EF is an enhancement factor)
  Viscosity = Variable bottom EF, mu
    Real procedure "ElmerIceUSF" "Asquare_Scaled"

  Viscosity derivative = Variable "bottom EF", mu
    REAL procedure "ElmerIceUSF" "Asquare_d_Scaled"

  Critical Shear Rate = Real 1.0e-10
End

Material 2
  Density = Real #rhoi
  Min FS lower = Equals bed
  Min Zs Bottom = Equals bed
End

Material 3
  Density = Real #rhoi
  Min FS upper = variable "bed"
    Real lua "tx[0] + MINH"
End


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! First 4 solvers are for the basal melt rate.
! Deltat_basin could have been read in during previous simulation (S1)
! but t_forcing needs to be read in here because it needs the mesh to
! be already extruded before reading in.
Solver 1
  Exec Solver = "Before All"
  Equation = "MapCoordinate_init"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"

  Active Coordinate = Integer 3
  Dot Product Tolerance = Real #DPtol
  Minimum Height = Real #MINH
  Top Surface Variable Name = String FS upper
  Bottom Surface Variable Name = String FS lower
  Correct Surface = Logical True
End

Solver 2
  Exec Solver = "before all"
  equation = "DeltaT"
  procedure = "GridDataReader" "GridDataReader"
  Filename = File #datadir#"coeff_gamma0_deltat_quadratic_local_median.nc"
  X Dim Name = String "X"
  Y Dim Name = String "Y"
  X Var Name = String "x"
  Y Var Name = String "y"
  Epsilon X = Real 1.0e-2
  Epsilon Y = Real 1.0e-2
  Interpolation Bias = Real 0.0
  Interpolation Multiplier = Real 1.0
  Variable 1 = deltat_basin
  Target Variable 1 = deltat_basin
  Enable Scaling = Logical False
End

Solver 3
  Exec Solver = "before timestep"
  equation = "TFeq"
  procedure = "GridDataReader" "GridDataReader"
  Filename = File #datadir#"obs_thermal_forcing_1995-2017_8km_x_60m.nc"
  X Dim Name = String "x"
  Y Dim Name = String "y"
  Z Dim Name = String "z"
  X Var Name = String "x"
  Y Var Name = String "y"
  Z Var Name = String "z"
  Epsilon X = Real 1.0e-2
  Epsilon Y = Real 1.0e-2
  Interpolation Bias = Real 0.0
  Interpolation Multiplier = Real 1.0
  Variable 1 = thermal_forcing
  Target Variable 1 = String "t_forcing"
  Enable Scaling = Logical False
End

Solver 4
   Exec Solver = "Before Timestep"
   Equation = "Get Meltrate"
   Procedure = "MeltrateSolver" "MeltrateSolver"
   Nonlocal Melt Rate = Logical False !would be anyhow the default
   Meltrate Mask = String "GroundedMask"
   Variable = bmb
   Variable DOFs = 1
End

Solver 5
  !Exec Solver = "never"
  Exec Solver = "Before Timestep"
  Equation = "MapCoordinate"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"

  Active Coordinate = Integer 3
  Dot Product Tolerance = Real #DPtol
  Minimum Height = Real #MINH
  Top Surface Variable Name = String FS upper
  Bottom Surface Variable Name = String FS lower
  Correct Surface = Logical True
End

Solver 6
  Equation = "HeightDepth"
  Exec Solver = "Before Timestep"
  Procedure = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Active Coordinate = Integer 3
  Operator 1 = depth
  Operator 2 = height
End

Solver 7
  Exec Solver = Before all 
  Equation = "GroundedMask"
  Procedure = "ElmerIceSolvers" "GroundedSolver"
  Variable = GroundedMask
  Variable DOFs = 1
  Toler = Real #GLTolerance
End

Solver 8
!  Exec solver = never
  Equation = "Normal Vector"
  Procedure = "ElmerIceSolvers" "ComputeNormalSolver"
  Variable = "Normal Vector"
  Variable DOFs = 3
  ComputeAll = Logical True
  Optimize Bandwidth = Logical False
End

Solver 9
!  Exec solver = never
  Equation = Fw
  Procedure = "ElmerIceSolvers" "GetHydrostaticLoads"
  Variable = Fw[Fwater:3]
  Variable DOFs = 3
End

!!!! Navier-Stokes Solution
Solver 10
  Equation = "Navier-Stokes"  
  Stabilization Method = String Stabilized
  Flow Model = Stokes

  Optimize Bandwidth = True

  !mandatory to save bulk stiffness matrix
  Calculate Loads = Logical True

  Linear System Solver = Direct
  Linear System Direct Method =  mumps
  Mumps percentage increase working space = Integer 60

  Nonlinear System Max Iterations = Integer 50
  Nonlinear System Convergence Tolerance  = Real 1.0e-7
  Nonlinear System Newton After Iterations = 50
  Nonlinear System Newton After Tolerance = 1.0e-5 
  Nonlinear System Reset Newton = Logical True
  !Nonlinear System Relaxation Factor = 0.4
  Nonlinear System Abort Not Converged = Logical True 

  Steady State Convergence Tolerance = Real 1.0e-10

  ! Timings of the solver
  Linear System Timing = Logical True
  Linear System Timing Cumulative = Logical True
  Solver Timing = Logical True
  Solver Timing Cumulative = Logical True

  ! Convergence on timelevel (IS THIS REQUIRED HERE?)
  !---------------------------------------------
  Steady State Convergence Tolerance = Real 1.0e-8  
  
  Exported Variable 1 = "Temperature"
  Exported Variable 1 DOFs = 1
  Exported Variable 2 = TemperatureRel
  Exported Variable 2 DOFs = Integer 1
  Exported Variable 3 = Mu
  Exported Variable 3 DOFs = Integer 1
  Exported Variable 4 = bottom EF
  Exported Variable 4 DOFs = Integer 1
  Exported Variable 5 = EF
  Exported Variable 5 DOFs = Integer 1

End

Solver 11
  Exec solver = "Never" !runs as never commented in by LAGS_relax_S2.sif
  Equation = String "StressSolver"
  Procedure =  File "ElmerIceSolvers" "ComputeDevStress"
  Variable = -nooutput "Sij"
  Variable DOFs = 1
  Flow Solver Name = String "Flow Solution"
  Stress Variable Name = String "Stress"
  Exported Variable 1 = "Stress" ! [Sxx, Syy, Szz, Sxy] in 2D
                                 ! [Sxx, Syy, Szz, Sxy, Syz, Szx] in 3D
  Exported Variable 1 DOFs = 6   ! 4 in 2D, 6 in 3D

  Linear System Solver = "Iterative"
!  Linear System Solver = "Direct"
!  Linear System Direct Method = MUMPS

  Linear System Iterative Method = "BiCGStab"
  Bicgstabl Polynomial Degree = 4
  Linear System Max Iterations = 300
  Linear System Convergence Tolerance = 1.0E-07
  Linear System Abort Not Converged = True
  Linear System Preconditioning = "ILU1"
  Linear System Residual Output = 1
End

Solver 12
! Exec Solver = Never
  Exec Solver = "After TimeStep"
  Equation =  String "Lower Free Surface"
  Variable = "FS lower"
  Variable DOFs = 1
  Procedure = "FreeSurfaceSolver" "FreeSurfaceSolver"
  Apply Dirichlet = Logical True
  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Max Iterations  = 500
  Linear System Preconditioning = ILU1
  Linear System Convergence Tolerance = 1.0e-08
  Nonlinear System Max Iterations = 100
  Nonlinear System Min Iterations = 2
  Nonlinear System Convergence Tolerance = 1.0e-06 
  Steady State Convergence Tolerance = 1.0e-04 
!  Stabilization Method = Bubbles
  Stabilization Method = Stabilized
  Flow Solution Name = String "Flow Solution"
  Use Accumulation = Logical True
!  Normal Flux = Logical False
  Exported Variable 1 = FS lower Residual
  Exported Variable 1 DOFS = 1
  Exported Variable 2 = ReferenceFS lower
  Exported Variable 2 DOFS = 1
End

Solver 13
!  Exec Solver = Never
  Exec Solver = "After TimeStep"
  Equation =  String "Upper Free Surface"
  Variable = "FS upper"
  Variable DOFs = 1
  Procedure = "FreeSurfaceSolver" "FreeSurfaceSolver"
  Apply Dirichlet = Logical True
  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Max Iterations  = 500
  Linear System Preconditioning = ILU1
  Linear System Convergence Tolerance = 1.0e-08
  Nonlinear System Max Iterations = 100
  Nonlinear System Min Iterations = 2
  Nonlinear System Convergence Tolerance = 1.0e-06
  Steady State Convergence Tolerance = 1.0e-4
!  Stabilization Method = Bubbles
  Stabilization Method = Stabilized
  Flow Solution Name = String "Flow Solution"
  Use Accumulation = Logical True
  Normal Flux = Logical False
  Exported Variable 1 =  FS upper Residual
  Exported Variable 1 DOFS = 1
  Exported Variable 2 = ReferenceFS upper
  Exported Variable 2 DOFS = 1
End

Solver 14
  Exec Solver = String "after saving"
  Equation = String "ResultOutput"
  Procedure = File "ResultOutputSolve" "ResultOutputSolver"
  Save Geometry Ids = Logical True
  Output File Name = File $name
  Output Format = String "vtu"
  Output Directory = File "./vtuoutputs"
  Vtu Format = Logical True
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Equation 1
  Active Solvers (11) = 1 2 3 4 5 6 8 9 10 11 14
End

Equation 2
  Active Solvers (2) = 7 12
  Convection = Computed
  Flow Solution Name = String "Flow Solution"
End

Equation 3
  Active Solvers (1) = 13
  Convection = Computed
  Flow Solution Name = String "Flow Solution"
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Boundary Condition 1
  Name = "inland_boundary" 
  Target Boundaries(1) = 1

  Normal-Tangential Velocity = Logical True
  Slip Coefficient 1 = Real 10.0
  Slip Coefficient 2 = Real 0.001
  Slip Coefficient 3 = Real 0.001
End

Boundary Condition 2
  Name = "calving_front"
  Target Boundaries(1) = 2

  External Pressure = Variable Coordinate 3
    Real lua "sw_pressure(tx[0])"
End

Boundary Condition 3
  Name= "lower_surface"
  Body Id = 2

  Test Contact Tolerance = real 1.0e-10
  Height = Real 0.0
  
  Normal-Tangential Velocity = Logical TRUE !FALSE when applying vertical change to ice shelf only

  Velocity 1 = Real 0.0e0  !3 when N-T vel is FALSE
  Velocity 1 Condition = Variable GroundedMask !3 when N-T vel is FALSE 
    Real LUA "tx[0] + 0.5"
  
  FS Lower = Equals bed
  FS Lower condition = Variable GroundedMask
     Real MATC "tx + 0.5" 

  Flow Force BC = Logical True

  Slip Coefficient 2 = Variable beta, GroundedMask !SC 1 when N-T vel is FALSE
    REAL procedure "ElmerIceUSF" "TenPowerA_masked" 
  Slip Coefficient 3 = Variable beta, GroundedMask !SC 2 when N-T vel is FALSE
    REAL procedure "ElmerIceUSF" "TenPowerA_masked" 
   
  External Pressure = Variable Coordinate 3!
    Real lua "sw_pressure(tx[0])"
   
  Slip Coefficient 1 = Variable Coordinate 3 !Slip coefficient 3 when N-T vel is FALSE
     Real Procedure "ElmerIceUSF" "SeaSpring"
  Compute Sea Spring = Logical True
End

! Upper Surface
Boundary Condition 4
  Name= "Surface" 
  Body Id = 3
  Depth = Real 0.0
End 
